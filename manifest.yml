apiVersion: apps/v1
kind: Deployment
metadata:
  name: application
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: application
  template:
    metadata:
      labels:
        app: application
    spec:
      containers:
      - name: application
        image: dor28/epulatov_application:latest
        volumeMounts:
          - mountPath: /etc/config
            name: env-conf
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000 
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 10 

        readinessProbe:
          httpGet:
            path: /healthx
            port: 5000
          initialDelaySeconds: 15
          periodSeconds: 15
          timeoutSeconds: 10 

      volumes:
        - name: env-conf
          configMap:
            name: env-conf
      imagePullSecrets:
        - name: docker-hub
     
---

apiVersion: v1
kind: Service
metadata:
  name: application
spec:
  selector:
    app: application
  ports:
  - port: 80
    targetPort: 5000

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  serviceName: mongo
  replicas: 1
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-persistent-claim
          mountPath: /data/db
        resources:
          requests:
            memory: "128Mi"
            cpu: "200m"
          limits:
            memory: "256Mi"
            cpu: "500m"
        envFrom:
          - secretRef:
              name: mongo

  volumeClaimTemplates:
  - metadata:
      name: mongo-persistent-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

--- 


apiVersion: v1
kind: Service
metadata:
  name: mongo-service
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  labels:
    name: nginx
spec:
  rules:
  - host: epulatov.application.com
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: application
            port: 
              number: 80
